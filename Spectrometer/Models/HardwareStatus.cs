using LibreHardwareMonitor.Hardware;
using System.Collections.ObjectModel;

namespace Spectrometer.Models;

public partial class HardwareStatus : ObservableObject
{
    // -------------------------------------------------------------------------------------------
    // Public Fields
    //   Backing fields automatically generated by CommunityToolkit.Mvvm
    //   These are accessible in all View Models and XAML - see DashboardViewModel.cs for implementation
    // -------------------------------------------------------------------------------------------

    [ObservableProperty]
    private bool _isLoading = true;

    // -------------------------------------------------------------------------------------------
    // Motherboard

    [ObservableProperty]
    private ObservableCollection<HardwareSensor> _mbSensors = [];

    [ObservableProperty]
    private string _mbName = string.Empty;

    // -------------------------------------------------------------------------------------------
    // CPU

    [ObservableProperty]
    private ObservableCollection<HardwareSensor> _cpuSensors = [];

    [ObservableProperty]
    private string _cpuImagePath = string.Empty;

    [ObservableProperty]
    private string _cpuName = string.Empty;

    [ObservableProperty]
    private float _cpuTemp;

    [ObservableProperty]
    private float _cpuUsage;

    [ObservableProperty]
    private float _cpuPower;

    [ObservableProperty]
    private float _cpuPowerMax;

    // -------------------------------------------------------------------------------------------
    // GPU

    [ObservableProperty]
    private ObservableCollection<HardwareSensor> _gpuSensors = [];

    [ObservableProperty]
    private string _gpuImagePath = string.Empty;

    [ObservableProperty]
    private string _gpuName = string.Empty;

    [ObservableProperty]
    private float _gpuTemp;

    [ObservableProperty]
    private float _gpuUsage;

    [ObservableProperty]
    private float _gpuMemoryTotal;

    [ObservableProperty]
    private float _gpuMemoryUsage;

    [ObservableProperty]
    private float _gpuPower;

    [ObservableProperty]
    private float _gpuPowerMax;

    // -------------------------------------------------------------------------------------------
    // Memory

    [ObservableProperty]
    private ObservableCollection<HardwareSensor> _memorySensors = [];

    [ObservableProperty]
    private string _memoryUsageDetails = string.Empty;

    [ObservableProperty]
    private double _memoryUsageGb;

    [ObservableProperty]
    private double _memoryTotalGb;

    // -------------------------------------------------------------------------------------------
    // Storage

    [ObservableProperty]
    private ObservableCollection<HardwareSensor> _storageSensors = [];
}

// -------------------------------------------------------------------------------------------
// Sensor Data Object

/// <summary>
/// Local data object for hardware sensor data
/// *** Items in this class are ephemeral!!! DO NOT STORE THINGS HERE!!! ***
/// </summary>
public partial class HardwareSensor : ObservableObject
{
    [ObservableProperty]
    private string _name = string.Empty;

    [ObservableProperty]
    private float _value;

    [ObservableProperty]
    private float _min;

    [ObservableProperty]
    private float _max;

    [ObservableProperty]
    private SensorType _sensorType;

    [ObservableProperty]
    private bool _isGraphEnabled;

    [ObservableProperty]
    private bool _isPinned;
}
